; Демонстрация обхода ASLR

.ORG 0x100

; Функция для обнаружения базового адреса
detect_base:
    ; Характерный паттерн программы, который будет в памяти
    LOAD_IMM R0, 0xABCDEF01
    STORE_REG R0, 0x600    ; Сигнатурный паттерн
    
start:
    ; Создаем сигнатуру для поиска базового адреса
    LOAD_IMM R0, 0xABCDEF01
    STORE_REG R0, 0x200    ; Запись сигнатуры
    
    ; Код, по которому мы хотим прыгнуть (его адрес будет рандомизирован)
    LOAD_IMM R1, 0x1337BEEF
    STORE_REG R1, 0x800    ; Запись вредоносного кода
    
    ; Сравним R0 со значением в 0x600 для определения смещения
    LOAD_MEM R2, 0x600     ; Загрузка сигнатуры из памяти
    CMP_REG R0, R2         ; Сравнение
    JNE 0x150              ; Если не совпадает, продолжаем поиск
    
    ; Найдено совпадение, вычисляем смещение
    LOAD_IMM R3, 0x500     ; Целевой адрес (без ASLR)
    LOAD_IMM R4, 0x800     ; Адрес вредоносного кода
    JMP 0x800              ; Переход на вредоносный код
    
    HALT 