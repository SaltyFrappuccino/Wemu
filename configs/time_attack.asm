; Демонстрация атаки по времени

.ORG 0x100

start:
    ; Загрузка предполагаемого пароля в память
    LOAD_IMM R0, 0x53000000   ; 'S' и нули (первый символ пароля)
    STORE_REG R0, 0x500       ; Сохраняем первую букву пароля для проверки
    
    ; Эмуляция проверки пароля по времени
    ; Представим, что символы проверяются по одному, и каждое совпадение увеличивает время
    
    ; Проверка первого символа (положим, что это 'S')
    LOAD_IMM R1, 0x53000000   ; Первый символ ожидаемого пароля ('S')
    LOAD_MEM R2, 0x500        ; Загрузим первый символ введенного пароля
    CMP_REG R1, R2            ; Сравниваем
    JNE fail                  ; Если не совпадает, проверка не пройдена
    
    ; Искусственная задержка при совпадении (эмулируется счетчиком)
    LOAD_IMM R3, 0x00000500   ; Счетчик задержки
delay_loop:
    SUB R3, R3, R0            ; Уменьшаем счетчик (R0 = 0x53000000)
    JNE delay_loop            ; Продолжаем, пока не станет 0
    
    ; Проверка следующего символа (и так далее)
    
    ; Запись результата проверки
    LOAD_IMM R0, 0x00000001   ; 1 = проверка пройдена
    STORE_REG R0, 0x600       ; Сохраняем результат в памяти
    HALT
    
fail:
    LOAD_IMM R0, 0x00000000   ; 0 = проверка не пройдена
    STORE_REG R0, 0x600       ; Сохраняем результат в памяти
    HALT 